{"ast":null,"code":"import GameBoard from \"./GameBoard\";\nexport const isWinner = (gameboard, currentMove, currentPlayer) => {\n  let board = [...gameboard];\n  board[currentMove] = currentPlayer;\n  const winLines = [[0, 1, 2, 3], [4, 5, 6, 7], [8, 9, 10, 11], [12, 13, 14, 15], [0, 4, 8, 12], [1, 5, 9, 13], [2, 6, 10, 14], [3, 7, 11, 17], [0, 5, 10, 16], [3, 6, 9, 12]];\n  for (let i = 0; i < winLines.length; i++) {\n    const [c1, c2, c3, c4] = winLines[i];\n    if (gameboard[c1] > 0 && gameboard[c1] === gameboard[c2] && gameboard[c2] === gameboard[c3] && gameboard[c3] === gameboard[c4]) {\n      return true;\n    }\n  }\n  return false;\n};\nexport const iSDraw = (gameBoard, currentMove, currentPlayer) => {\n  let board = [...gameBoard];\n  board[currentMove] = currentPlayer;\n  let count = board.reduce((n, x) => n + (x == 0), 0);\n  return count == 0;\n};\nexport const getComputerMove = gameBoard => {};","map":{"version":3,"names":["GameBoard","isWinner","gameboard","currentMove","currentPlayer","board","winLines","i","length","c1","c2","c3","c4","iSDraw","gameBoard","count","reduce","n","x","getComputerMove"],"sources":["C:/Users/yogesh/OneDrive/Desktop/gamingreact-1/src/Components/helper.js"],"sourcesContent":["import GameBoard from \"./GameBoard\";\r\n\r\nexport const isWinner=(gameboard ,currentMove,currentPlayer)=>{\r\n    let board=[...gameboard]\r\n    board[currentMove]=currentPlayer\r\n    const winLines=[\r\n        [0,1,2,3],\r\n        [4,5,6,7],\r\n        [8,9,10,11],\r\n        [12,13,14,15],\r\n        [0,4,8,12],\r\n        [1,5,9,13],\r\n        [2,6,10,14],\r\n        [3,7,11,17],\r\n        [0,5,10,16],\r\n        [3,6,9,12]\r\n    ]\r\n    for(let i=0;i<winLines.length;i++){\r\n     const[c1,c2,c3,c4]=winLines[i];\r\n     if(gameboard[c1]>0 &&\r\n        gameboard[c1]===gameboard[c2] &&\r\n        gameboard[c2]===gameboard[c3]&&\r\n        gameboard[c3]===gameboard[c4]){\r\n            return true;\r\n        }\r\n    }\r\n    return false\r\n}\r\n    export const iSDraw=(gameBoard,currentMove,currentPlayer)=>{\r\n        let board=[...gameBoard];\r\n        board[currentMove]=currentPlayer;\r\n        let count =board.reduce((n,x)=>n+(x==0),0);\r\n        return count==0\r\n    }\r\n    export const getComputerMove=(gameBoard)=>{\r\n        \r\n    }\r\n"],"mappings":"AAAA,OAAOA,SAAS,MAAM,aAAa;AAEnC,OAAO,MAAMC,QAAQ,GAAC,CAACC,SAAS,EAAEC,WAAW,EAACC,aAAa,KAAG;EAC1D,IAAIC,KAAK,GAAC,CAAC,GAAGH,SAAS,CAAC;EACxBG,KAAK,CAACF,WAAW,CAAC,GAACC,aAAa;EAChC,MAAME,QAAQ,GAAC,CACX,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EACT,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EACT,CAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,CAAC,EACX,CAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC,EACb,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,CAAC,EACV,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,CAAC,EACV,CAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,CAAC,EACX,CAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,CAAC,EACX,CAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,CAAC,EACX,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,CAAC,CACb;EACD,KAAI,IAAIC,CAAC,GAAC,CAAC,EAACA,CAAC,GAACD,QAAQ,CAACE,MAAM,EAACD,CAAC,EAAE,EAAC;IACjC,MAAK,CAACE,EAAE,EAACC,EAAE,EAACC,EAAE,EAACC,EAAE,CAAC,GAACN,QAAQ,CAACC,CAAC,CAAC;IAC9B,IAAGL,SAAS,CAACO,EAAE,CAAC,GAAC,CAAC,IACfP,SAAS,CAACO,EAAE,CAAC,KAAGP,SAAS,CAACQ,EAAE,CAAC,IAC7BR,SAAS,CAACQ,EAAE,CAAC,KAAGR,SAAS,CAACS,EAAE,CAAC,IAC7BT,SAAS,CAACS,EAAE,CAAC,KAAGT,SAAS,CAACU,EAAE,CAAC,EAAC;MAC1B,OAAO,IAAI;IACf;EACJ;EACA,OAAO,KAAK;AAChB,CAAC;AACG,OAAO,MAAMC,MAAM,GAAC,CAACC,SAAS,EAACX,WAAW,EAACC,aAAa,KAAG;EACvD,IAAIC,KAAK,GAAC,CAAC,GAAGS,SAAS,CAAC;EACxBT,KAAK,CAACF,WAAW,CAAC,GAACC,aAAa;EAChC,IAAIW,KAAK,GAAEV,KAAK,CAACW,MAAM,CAAC,CAACC,CAAC,EAACC,CAAC,KAAGD,CAAC,IAAEC,CAAC,IAAE,CAAC,CAAC,EAAC,CAAC,CAAC;EAC1C,OAAOH,KAAK,IAAE,CAAC;AACnB,CAAC;AACD,OAAO,MAAMI,eAAe,GAAEL,SAAS,IAAG,CAE1C,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}